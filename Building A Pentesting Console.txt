#Creating a Pentesting Console

# One of the things I like to do is create a pentesting setup console.  Basically, I am creating a setup bash script that starts up various services such as an xterm console that monitors syslog events, a tcpdump console that allows me to monitor network # traffic, a metasploit console from which I can launch exploits, and a notes console which contains my various scripts (more like an actor’s script not a bash script) from which I can pick and choose the various commands I want to run at each stage of the # pentesting exercise.  To make this simple I do the following on Kali 1:

# First, follow instruction in the vim.txt file to create a vim colorized file. This makes operational scripts easier to read.

# When working with the geometry or placement of terminals on your screen as seen below, they will need to be adjusted. Run the setup.sh script below, then align your terminals where you want them on your screen. In a separate terminal, run the "xwininfo" # command. Place the cursor in the terminal where you want to get the geometry. Click the left mouse button. Copy and paste the geometry measurements into the setup.sh script section associated with that terminal. 

vim /usr/local/bin/setup.sh

#!/bin/bash

echo \[\-\] Starting Logging Console

sleep 2

xterm -C -geometry 115x18-2-2 -e tail -f /var/log/auth.log &

echo \[\-\] Starting tcpdump console

gnome-terminal --geometry=90x6-0+900 --hide-menubar -x tcpdump -i eth0 not icmp

echo \[\-\] Starting metasploit console

gnome-terminal --geometry=90x20-0+350 --hide-menubar -x msfconsole

echo \[\-\] Opening scripts and notes

# The below gnome-terminal lines are all one line, not seven individual lines.

gnome-terminal --geometry=90x12-0+5 --window --title="Linux Security" --active -e "vim  /root/Documents/scripts/linux_dosVersion.script" --tab --title="Communications" -e "vim /root/Documents/scripts/communications_dosVersion.script" --tab --title="Crytography" -e "vim /root/Documents/scripts/crypto_dosVersion.script" --tab --title=="Exploit Attacks" -e "vim /root/Documents/scripts/exploit_dosVersion.script" --tab --title=="Network Forensics" -e "vim /root/Documents/scripts/netForensics_dosVersion.script" --tab --title=="Scanning" -e "vim /root/Documents/scripts/scanning_dosVersion.script" --tab --title=="TShark" -e "vim /root/Documents/scripts/tshark.script"

:wq!

 

# chmod 700 /usr/local/bin/setup.sh

And, by typing setup.sh in our terminal window, that will create out console as displayed below:

pentesting console

 

A note on the ‘geometry’.  This is a little tricky.  The first two numbers are the terminal or xterm window size.  The third number is the placement horizontally on the screen.  I have the number zero which means these windows will be all the way to the right.  The last number is a bit tricky and will take a little testing on your part.  It is the placement of the window vertically on the screen and will work in conjunction with the window size. You can use the command 'xwininfo' after you have placed the terminal where you want it to find the geometry.

We will get into the process of creating pentesting scripts later.  These are important because it puts the commands you need for each stage at your fingertips.
